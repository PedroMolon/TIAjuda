-- V3__create_proposals_table.sql

-- Cria a tabela proposals
CREATE TABLE proposals (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    price NUMERIC(19, 2) NOT NULL, -- NUMERIC para valores monetários (ajuste precisão conforme necessidade)
    description TEXT NOT NULL,
    status VARCHAR(255) NOT NULL,
    service_request_id BIGINT NOT NULL,
    technician_id BIGINT NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_proposals PRIMARY KEY (id)
);

-- Adiciona a chave estrangeira para a tabela service_requests
ALTER TABLE proposals
ADD CONSTRAINT fk_proposals_on_service_request FOREIGN KEY (service_request_id) REFERENCES service_requests (id);

-- Adiciona a chave estrangeira para a tabela users (para o técnico)
ALTER TABLE proposals
ADD CONSTRAINT fk_proposals_on_technician FOREIGN KEY (technician_id) REFERENCES users (id);

-- Adiciona um índice para otimização de consultas por service_request_id
CREATE INDEX idx_proposals_service_request_id ON proposals (service_request_id);

-- Adiciona um índice para otimização de consultas por technician_id
CREATE INDEX idx_proposals_technician_id ON proposals (technician_id);

-- Opcional: Adicionar uma restrição de unicidade para que um técnico só possa enviar uma proposta por serviço
-- Se você quiser permitir que um técnico envie múltiplas propostas para o mesmo serviço, ignore esta linha.
-- Mas geralmente, uma proposta por técnico por serviço faz mais sentido.
ALTER TABLE proposals
ADD CONSTRAINT uk_proposals_service_technician UNIQUE (service_request_id, technician_id);